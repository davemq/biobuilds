--- Makefile	2019-03-13 09:42:12.000000000 -0400
+++ Makefile	2019-11-12 14:37:57.956789000 -0500
@@ -54,7 +54,7 @@
 
 # The following four variables are only used by cppcheck. If you want to
 # change how things are compiled edit `setup.cfg` or `setup.py`.
-DEFINES += -DNDEBUG -DVERSION=$(VERSION) -DSEQAN_HAS_BZIP2=1 \
+DEFINES += -DNO_WARN_X86_INTRINSICS -DNDEBUG -DVERSION=$(VERSION) -DSEQAN_HAS_BZIP2=1 \
 	   -DSEQAN_HAS_ZLIB=1 -UNO_UNIQUE_RC
 
 INCLUDESTRING=$(shell gcc -E -x c++ - -v < /dev/null 2>&1 >/dev/null \
--- third-party/cqf/gqf.c	2019-03-13 09:42:12.000000000 -0400
+++ third-party/cqf/gqf.c	2019-11-12 15:04:09.096053305 -0500
@@ -49,11 +49,15 @@
 
 static inline int popcnt(uint64_t val)
 {
+#ifdef __PPC__
+        return __builtin_popcount(val);
+#else
 	asm("popcnt %[val], %[val]"
 			: [val] "+r" (val)
 			:
 			: "cc");
 	return val;
+#endif
 }
 
 static inline int64_t bitscanreverse(uint64_t val)
@@ -61,10 +65,14 @@
 	if (val == 0) {
 		return -1;
 	} else {
+#ifdef __PPC__
+       val = (__builtin_clzll(val) >> 3);
+#else
 		asm("bsr %[val], %[val]"
 				: [val] "+r" (val)
 				:
 				: "cc");
+#endif
 		return val;
 	}
 }
@@ -81,11 +89,15 @@
 // Bits are numbered from 0
 static inline int bitrank(uint64_t val, int pos) {
 	val = val & ((2ULL << pos) - 1);
+#ifdef __PPC__
+        return __builtin_popcount(val);
+#else
 	asm("popcnt %[val], %[val]"
 			: [val] "+r" (val)
 			:
 			: "cc");
 	return val;
+#endif
 }
 
 /**
